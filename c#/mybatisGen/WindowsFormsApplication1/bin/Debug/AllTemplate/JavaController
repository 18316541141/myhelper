package web.template.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import web.template.controller.common.BaseController;
import web.template.service.IRobotQrCodePayTaskService;
/**
 * ***模块的控制器类
 * @author admin
 */
@RestController
@RequestMapping("/$entity.EntityName$")
public class $entity.EntityName$Controller extends BaseController{
	
	@Autowired
	private $entity.EntityName$Service service;
	
	/*抄考代码
	----------------------------------------------------------------------------------------------------------------------------
	$entity.EntityName$ data = new $entity.EntityName$();
	$entity.PropList:{
		$if(it.ParamsTypeIsEqual)$
			$if(it.IsKey)$
				data.set$it.CapUpperPropName$(nextId());
			$else$
				data.set$it.CapUpperPropName$(param.get$it.CapUpperPropName$());
			$endif$
		$endif$
	}$
	----------------------------------------------------------------------------------------------------------------------------
	$entity.EntityName$Params param = new $entity.EntityName$Params();
	$entity.PropList:{
	param.set$it.CapUpperPropName$(param.get$it.CapUpperPropName$());
	}$
	----------------------------------------------------------------------------------------------------------------------------
	* 分页查询***模块，并返回查询结果
	* @param param	查询参数
    * @param currentPageIndex	当前页码
 	* @param pageSize	每页显示的数据量
    * @return	返回***模块的查询结果
    @RequestMapping("/page")
	public Result page($entity.EntityName$Params param,int currentPageIndex,int pageSize){
		return new Result(0,null,service.page(param, currentPageIndex, pageSize));
	}
	----------------------------------------------------------------------------------------------------------------------------
	导出excel，待定...
	----------------------------------------------------------------------------------------------------------------------------
	@RequestMapping("/import")
	public Result importExcel(@RequestParam("fileUpload")MultipartFile fileUpload, 其他参数...){
		List<$entity.EntityName$> $entity.EntityName$List;
        if (fileUpload.getOriginalFilename().endsWith("xlsx"))
        {
            $entity.EntityName$List = ExcelHelper.excelXlsxToList<$entity.EntityName$>(fileUpload.InputStream);
        }
        else if (fileUpload.getOriginalFilename().endsWith("xls"))
        {
            $entity.EntityName$List = ExcelHelper.excelXlsToList<$entity.EntityName$>(fileUpload.InputStream);
        }
		service.addBatch($entity.EntityName$List);
		return new Result(0, "导入成功。",null);
	}
	----------------------------------------------------------------------------------------------------------------------------
	@RequestMapping("/del")
	public Result del(long $entity.KeyName$){
        service.del($entity.KeyName$);
		return new Result(0, "数据已删除。",null);
	}
	----------------------------------------------------------------------------------------------------------------------------
	* 新增一条数据
	* @param data	新增的数据
	@RequestMapping("/add")
	public Result add($entity.EntityName$ data){
		service.add(data);
		return new Result(0, "保存成功。",null);
	}
	----------------------------------------------------------------------------------------------------------------------------
	* 批量修改状态
	* @param datas	  修改状态的数据
	@RequestMapping("/changeStatus")
	public Result changeStatus($entity.EntityName$ datas){
		return new Result(0,"修改成功，共"+service.changeStatus(datas)+"条。",null);
	}
	----------------------------------------------------------------------------------------------------------------------------
	* 根据主键id查询***模块的数据实体
	* @param $entity.KeyName$	主键id
	* @param return 返回***模块的查询结果
	@RequestMapping("/load")
	public Result load(Long $entity.KeyName$){
		return new Result(0,null ,service.Load($entity.KeyName$) );
	}
	----------------------------------------------------------------------------------------------------------------------------
	* 批量删除***模块的数据实体
	* @param datas	删除的数据主键列表
	@RequestMapping("/delBatch")
	public Result delBatch(List<$entity.EntityName$> datas){
		return new Result(0 ,null,"删除成功，共"+Service.DelBatch(datas)+"条。");
	}
	 */
}